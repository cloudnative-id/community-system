// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Community-system is an system to manage community.",
    "title": "Community System",
    "contact": {
      "email": "zufardhiyaulhaq@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "0.0.0.0:8080",
  "basePath": "/api/v1",
  "paths": {
    "/meetups": {
      "get": {
        "description": "A JSON array of meetups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Returns a list of meetups.",
        "operationId": "getMeetups",
        "responses": {
          "200": {
            "description": "A JSON array of meetups",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Meetup"
              }
            }
          },
          "404": {
            "description": "Meetups not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create meetup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Put meetup data.",
        "operationId": "putMeetup",
        "parameters": [
          {
            "description": "The meetup to create.",
            "name": "meetup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/sponsors": {
      "get": {
        "description": "A JSON array of sponsors",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Returns a list of sponsors.",
        "operationId": "getSponsors",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sponsor"
              }
            }
          },
          "404": {
            "description": "Speaker not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create sponsor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Put sponsor data.",
        "operationId": "putSponsor",
        "parameters": [
          {
            "description": "The sponsor to create.",
            "name": "sponsor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sponsor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/sponsors/{sponsor_id}": {
      "patch": {
        "description": "update sponsor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Patch sponsor data.",
        "operationId": "patchSponsor",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the sponsor.",
            "name": "sponsor_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The sponsor to create.",
            "name": "sponsor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sponsor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}": {
      "get": {
        "description": "A meetup object in json",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Returns a meetup.",
        "operationId": "getMeetup",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup to return.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          },
          "404": {
            "description": "Meetup not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "description": "update meetup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Patch meetup data.",
        "operationId": "patchMeetup",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The meetup to create.",
            "name": "meetup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}/speakers": {
      "get": {
        "description": "A JSON array of speakers",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Returns a list of speakers in meetup.",
        "operationId": "getSpeakers",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup to return.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Speaker"
              }
            }
          },
          "404": {
            "description": "Speaker not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create speaker",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Put speaker data.",
        "operationId": "putSpeaker",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The speaker to create.",
            "name": "speaker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Speaker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "404": {
            "description": "Meetup not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}/speakers/{speaker_id}": {
      "patch": {
        "description": "update speaker",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Patch speaker data.",
        "operationId": "patchSpeaker",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the speaker.",
            "name": "speaker_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The speaker to create.",
            "name": "speaker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Speaker"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Meetup": {
      "type": "object",
      "required": [
        "country",
        "city",
        "time",
        "location",
        "duration",
        "tags"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "registrationUrl": {
          "type": "string"
        },
        "speakers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sponsors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Speaker": {
      "required": [
        "name",
        "position",
        "company",
        "title",
        "image"
      ],
      "properties": {
        "company": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Sponsor": {
      "type": "object",
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Community-system is an system to manage community.",
    "title": "Community System",
    "contact": {
      "email": "zufardhiyaulhaq@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "0.0.0.0:8080",
  "basePath": "/api/v1",
  "paths": {
    "/meetups": {
      "get": {
        "description": "A JSON array of meetups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Returns a list of meetups.",
        "operationId": "getMeetups",
        "responses": {
          "200": {
            "description": "A JSON array of meetups",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Meetup"
              }
            }
          },
          "404": {
            "description": "Meetups not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create meetup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Put meetup data.",
        "operationId": "putMeetup",
        "parameters": [
          {
            "description": "The meetup to create.",
            "name": "meetup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/sponsors": {
      "get": {
        "description": "A JSON array of sponsors",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Returns a list of sponsors.",
        "operationId": "getSponsors",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sponsor"
              }
            }
          },
          "404": {
            "description": "Speaker not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create sponsor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Put sponsor data.",
        "operationId": "putSponsor",
        "parameters": [
          {
            "description": "The sponsor to create.",
            "name": "sponsor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sponsor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/sponsors/{sponsor_id}": {
      "patch": {
        "description": "update sponsor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "sponsor"
        ],
        "summary": "Patch sponsor data.",
        "operationId": "patchSponsor",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the sponsor.",
            "name": "sponsor_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The sponsor to create.",
            "name": "sponsor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sponsor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}": {
      "get": {
        "description": "A meetup object in json",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Returns a meetup.",
        "operationId": "getMeetup",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup to return.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          },
          "404": {
            "description": "Meetup not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "description": "update meetup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "meetup"
        ],
        "summary": "Patch meetup data.",
        "operationId": "patchMeetup",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The meetup to create.",
            "name": "meetup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meetup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}/speakers": {
      "get": {
        "description": "A JSON array of speakers",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Returns a list of speakers in meetup.",
        "operationId": "getSpeakers",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup to return.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Speaker"
              }
            }
          },
          "404": {
            "description": "Speaker not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "description": "create speaker",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Put speaker data.",
        "operationId": "putSpeaker",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The speaker to create.",
            "name": "speaker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Speaker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "object uuid \u0026 status",
            "schema": {
              "$ref": "#/definitions/CreateObject"
            }
          },
          "404": {
            "description": "Meetup not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/meetups/{meetup_id}/speakers/{speaker_id}": {
      "patch": {
        "description": "update speaker",
        "produces": [
          "application/json"
        ],
        "tags": [
          "speaker"
        ],
        "summary": "Patch speaker data.",
        "operationId": "patchSpeaker",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the meetup.",
            "name": "meetup_id",
            "in": "path",
            "required": true
          },
          {
            "minimum": 1,
            "type": "string",
            "description": "The ID of the speaker.",
            "name": "speaker_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The speaker to create.",
            "name": "speaker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Speaker"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "updated"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Meetup": {
      "type": "object",
      "required": [
        "country",
        "city",
        "time",
        "location",
        "duration",
        "tags"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "registrationUrl": {
          "type": "string"
        },
        "speakers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sponsors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Speaker": {
      "required": [
        "name",
        "position",
        "company",
        "title",
        "image"
      ],
      "properties": {
        "company": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Sponsor": {
      "type": "object",
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    }
  }
}`))
}
